import jetbrains.sign.GpgSignSignatoryProvider

/*
 * Copyright 2000-2021 JetBrains s.r.o.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

buildscript {
    repositories {
        maven { url "https://packages.jetbrains.team/maven/p/jcs/maven" }
    }
    dependencies {
        classpath 'com.jetbrains:jet-sign:38'
    }
}

plugins {
    id "io.github.gradle-nexus.publish-plugin" version "1.1.0"
}

ext.projectVersion = projectVersion
ext.publishingUser = System.getenv('PUBLISHING_USER')
ext.publishingPassword = System.getenv('PUBLISHING_PASSWORD')
if (ext.publishingPassword == null) {
    ext.projectVersion = ext.projectVersion + '-SNAPSHOT'
}
println "##teamcity[setParameter name='java.annotations.version' value='$projectVersion']"

allprojects {
    // https://github.com/gradle/gradle/issues/847
    group 'org.jetbrains.proto'
    version rootProject.ext.projectVersion

    repositories {
        mavenCentral()
    }
}

nexusPublishing {
    repositories {
        sonatype {
            username = rootProject.ext.publishingUser
            password = rootProject.ext.publishingPassword
        }
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'maven-publish'
    apply plugin: 'signing'
}

configure([project(':java-annotations'), project(':multiplatform-annotations')]) {
    publishing {
        publications.withType(MavenPublication) {
            group 'org.jetbrains'
            version rootProject.ext.projectVersion

            pom.withXml {
                asNode().children().last() + {
                    resolveStrategy = DELEGATE_FIRST
                    name 'JetBrains Java Annotations'
                    description 'A set of annotations used for code inspection support and code documentation.'
                    url 'https://github.com/JetBrains/java-annotations'
                    scm {
                        url 'https://github.com/JetBrains/java-annotations'
                        connection 'scm:git:git://github.com/JetBrains/java-annotations.git'
                        developerConnection 'scm:git:ssh://github.com:JetBrains/java-annotations.git'
                    }
                    licenses {
                        license {
                            name 'The Apache Software License, Version 2.0'
                            url 'https://www.apache.org/licenses/LICENSE-2.0.txt'
                            distribution 'repo'
                        }
                    }
                    developers {
                        developer {
                            id 'JetBrains'
                            name 'JetBrains Team'
                            organization 'JetBrains'
                            organizationUrl 'https://www.jetbrains.com'
                        }
                    }
                }
            }
        }
    }

//    signing {
//        sign publishing.publications
//        signatories = new GpgSignSignatoryProvider()
//    }
}
